import Head from 'next/head';
import Link from 'next/link';

import { createClient } from 'contentful';

import { Button, Dropdown, Icon, Segment, Grid } from 'semantic-ui-react'

const client = createClient({
    space: process.env.CONTENTFUL_SPACE_ID,
    accessToken: process.env.CONTENTFUL_ACCESS_KEY
});

const iconMap = type => {
    const icons = {
        "Video": "video",
        "Article": "book",
        "Interactive": "magic"
    }
    return icons[type]
}

export async function getStaticPaths() {
    const res = await client.getEntries({
        include: 2,
        content_type: "topic",
        select: ['fields.moduleNumber', 'fields.unit'].join(',')
    });

    return {
        paths: res.items.map(item => ({ params: { course: item.fields.unit.fields.course.fields.slug, unit: "unit-" + item.fields.unit.fields.unitNumber, module: item.fields.moduleNumber.toString() } })),
        fallback: true,
    }
}

export async function getStaticProps({ params }) {
    const res = await client.getEntries({
        include: 2,
        content_type: "topic",
        'fields.moduleNumber': params.module
    });

    const res2 = await client.getEntries({
        content_type: "lesson",
        'fields.modules.sys.id': res.items[0].sys.id
    });

    const res3 = await client.getEntries({
        content_type: "quiz",
        'fields.modules.sys.id': res.items[0].sys.id
    });

    return {
        props: {
            module: res.items[0],
            lessons: res2.items.sort((a, b) => a.fields.order - b.fields.order),
            quizzes: res3.items,
            revalidate: 60 * 15
        }
    }

}

export default function Module({ module, lessons, quizzes }) {
    return (
        <>
            <Head>
                <title>{"Learnit - " + module.fields.unit.fields.course.fields.title + " " + module.fields.unit.fields.unitNumber + "." + module.fields.moduleNumber}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="page_body">
                <Link href={"/" + module.fields.unit.fields.course.fields.slug}>
                    <Button icon labelPosition='left'>
                        <Icon name='left arrow' />
                        Back
                    </Button>
                </Link>
                <h1>Topic {module.fields.unit.fields.unitNumber}.{module.fields.moduleNumber} - {module.fields.title}</h1>
                <p>{module.fields.description}</p>
                <div>
                    <Button color="orange"><Icon name='pencil' /> Test Me</Button>
                    <Link href={"/study/" + module.sys.id}>
                        <Button color="orange"><Icon name='clipboard check' /> Study Mode</Button>
                    </Link>
                    <Button.Group color='orange'>
                        <Dropdown
                            text="Challenges"
                            className="button">
                            <Dropdown.Menu>
                                <Dropdown.Item>Quiz Race</Dropdown.Item>
                                <Dropdown.Item>Tug of War</Dropdown.Item>
                                <Dropdown.Item>Tower Defense</Dropdown.Item>
                            </Dropdown.Menu>
                        </Dropdown>
                    </Button.Group>

                </div>
                <br />
                <Grid celled='internally'>
                    <Grid.Row>
                        <Grid.Column width={10} style={{paddingLeft: 0, paddingRight: 50}}>
                            <h2>Lessons</h2>
                            {lessons.length > 0 ? <Segment.Group>
                                {lessons.map((lesson, i) => <Link key={i} href={"/lessons/" + lesson.sys.id}>
                                    <Segment key={i} className="link" style={{ minHeight: 0 }}><Icon name={iconMap(lesson.fields.type)} /> {lesson.fields.title}</Segment>
                                </Link>)}
                            </Segment.Group> : <p>No lessons posted in this module</p>}
                        </Grid.Column>
                        <Grid.Column width={6} style={{paddingLeft: 50, paddingRight: 0}}>
                            <h2>Skill Practice</h2>
                            {/* Show the best score in the quiz link */}
                            {quizzes.length > 0 ? <Segment.Group>
                                {quizzes.map((quiz, i) => <Link key={i} href={"/quizzes/" + quiz.sys.id}>
                                    <Segment className="link" style={{ minHeight: 0 }}>{quiz.fields.title}</Segment>
                                </Link>)}
                            </Segment.Group> : <p>No quizzes posted in this module</p>}
                        </Grid.Column>
                    </Grid.Row>
                </Grid>
            </div>
        </>
    )
}
