import Head from 'next/head';
import Link from 'next/link';
import { useState } from 'react';

import { createClient } from 'contentful';

import { Button, Accordion, Icon, Segment, Progress, Card, CardGroup, Divider } from 'semantic-ui-react'

const client = createClient({
    space: process.env.CONTENTFUL_SPACE_ID,
    accessToken: process.env.CONTENTFUL_ACCESS_KEY
});

export async function getStaticPaths() {
    const res = await client.getEntries({
        content_type: "course",
        select: ['fields.slug'].join(',')
    });

    return {
        paths: res.items.map(item => ({ params: { course: item.fields.slug } })),
        fallback: false,
    }
}

export async function getStaticProps({ params }) {
    const res = await client.getEntries({
        content_type: "course",
        'fields.slug': params.course
    });

    const res2 = await client.getEntries({
        content_type: "unit",
        'fields.course.sys.id': res.items[0].sys.id
    });

    let units;

    if (res2.items.length > 0) {
        units = res2.items.sort((a, b) => a.fields.unitNumber - b.fields.unitNumber);
        for (const unit of units) {
            const res = await client.getEntries({
                content_type: "topic",
                'fields.unit.sys.id': unit.sys.id,
                select: ["fields.title", "fields.moduleNumber", "fields.icon"].join(",")
            });
            const modules = res.items.sort((a, b) => a.fields.moduleNumber - b.fields.moduleNumber).map(unit => unit.fields);
            unit.modules = modules;
        }
    } else {
        units = null;
    }

    return {
        props: {
            course: res.items[0],
            units: units,
            revalidate: 30
        }
    }

}

export default function Course({ course, units }) {
    const [activeIndex, setActiveIndex] = useState(0);

    const handleClick = (e, titleProps) => {
        const { index } = titleProps;
        const newIndex = activeIndex === index ? -1 : index;

        setActiveIndex(newIndex);
    }

    return (
        <>
            <Head>
                <title>{"Learnit - " + course.fields.title}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className='page_body'>
                <Link href="library">
                    <Button icon labelPosition='left'>
                        <Icon name='left arrow' />
                        Back
                    </Button>
                </Link>
                <h1>{course.fields.title}</h1>
                <p>{course.fields.description || ""}</p>
                <Progress percent={59} progress color='orange' />
                <CardGroup>
                    <Card>
                    <Card.Content>
                        <Card.Header>Mastery Quiz</Card.Header>
                        <Card.Meta>10 questions</Card.Meta>
                        <Card.Description>
                        <Button>Start now!</Button>
                        </Card.Description>
                    </Card.Content>
                    </Card>
                    <Card>
                    <Card.Content>
                        <Card.Header>Scheduled Topic</Card.Header>
                        <Card.Meta>2.1 Limit Definition of the Derivative</Card.Meta>
                        <Card.Description>
                        <Button>Study Module</Button>
                        </Card.Description>
                    </Card.Content>
                    </Card>
                    <Card>
                    <Card.Content>
                        <Card.Header>Recommended Review</Card.Header>
                        <Card.Meta>1.3 Estimating Limit Values from Graphs</Card.Meta>
                        <Card.Description>
                        <Button>Study Module</Button>
                        </Card.Description>
                    </Card.Content>
                    </Card>
                </CardGroup>
                <Divider />
                {units ? <Accordion fluid styled>
                    {units.map((unit, i) => (
                        <div key={i}>
                            <Accordion.Title index={i} active={activeIndex === i} onClick={handleClick}>
                                <Icon name='dropdown' />
                                Unit {unit.fields.unitNumber} - {unit.fields.title}
                            </Accordion.Title>
                            <Accordion.Content active={activeIndex === i}>
                                <p>{unit.fields.description || ""}</p>
                                <Link href={"/"+course.fields.slug+"/unit-"+unit.fields.unitNumber}><Button color="orange">Study Unit</Button></Link>
                                <Button color="orange" basic>Add to Calendar</Button>
                                <Segment.Group>
                                    {unit.modules.map(module => <Link key={module.unitNumber} href={"/"+course.fields.slug+"/unit-"+unit.fields.unitNumber+"/"+module.moduleNumber}>
                                        <Segment className="link" style={{minHeight:0}}>{unit.fields.unitNumber}.{module.moduleNumber} - {module.title}</Segment>
                                    </Link>)}
                                </Segment.Group>
                            </Accordion.Content>
                        </div>
                    ))}
                </Accordion> : <p>No units found.</p>}
            </div>
        </>
    )
}
