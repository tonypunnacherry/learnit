import Head from 'next/head';
import Link from 'next/link';
import _ from 'lodash';

import { createClient } from 'contentful';
import { useState, useEffect } from 'react';
import { Button, Icon, Label } from 'semantic-ui-react'

import Prompt from '../../components/prompt'

import { useUser } from '@auth0/nextjs-auth0';

const client = createClient({
    space: process.env.CONTENTFUL_SPACE_ID,
    accessToken: process.env.CONTENTFUL_ACCESS_KEY
});

export async function getStaticPaths() {
    const res = await client.getEntries({
        include: 2,
        content_type: "topic",
        select: ['sys.id'].join(',')
    });

    return {
        paths: res.items.map(item => ({ params: { module: item.sys.id } })),
        fallback: true,
    }
}

export async function getStaticProps({ params }) {
    const res = await client.getEntries({
        include: 2,
        content_type: "topic",
        'sys.id': params.module
    });

    const module = res.items[0];

    const res2 = await fetch("http://localhost:3000/api/study/getModule", {
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        method: "POST",
        body: JSON.stringify({ module })
    })

    const info = await res2.json();

    return {
        props: { info, module }
    }

}

// TODO: Auto-load question progress if quiz not completed in last session

export default function Module({ info, module }) {
    const { user, error, isLoading } = useUser();

    const [currentQuestion, setCurrentQuestion] = useState(info.set[Math.floor(Math.random() * info.set.length)]);
    
    if (isLoading) return <div>Loading...</div>;
    if (error) return <div>{error.message}</div>;
    return (
        <>
            <Head>
                <title>{"Learnit"}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.2/dist/katex.min.css" integrity="sha384-bYdxxUwYipFNohQlHt0bjN/LCpueqWz13HufFEV1SUatKs1cm4L6fFgCi1jT643X" crossOrigin="anonymous" />
                <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.2/dist/katex.min.js" integrity="sha384-Qsn9KnoKISj6dI8g7p1HBlNpVx0I8p1SvlwOldgi3IorMle61nQy4zEahWYtljaz" crossOrigin="anonymous"></script>
                <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.2/dist/contrib/auto-render.min.js" integrity="sha384-+VBxd3r6XgURycqtZ117nYw44OOcIax56Z4dCRWbxyPt0Koah1uHoK0o4+/RRE05" crossOrigin="anonymous"
                    onload="renderMathInElement(document.getElementById('question'));"></script>
            </Head>
            <div className="page_body">
                <Link href={"/"}>
                    <Button icon labelPosition='left'>
                        <Icon name='left arrow' />
                        Back
                    </Button>
                </Link>
                <div class="ui clearing segment">
                    <div class="ui right floated header">
                        {info.time / 60} minutes
                    </div>
                    <h3 class="ui left floated header">
                        Study: {module.fields.title}
                        <Label>Topic {module.fields.unit.fields.unitNumber}.{module.fields.moduleNumber}</Label>
                    </h3>
                </div>
                <br />
                <div id="question">
                    <Prompt question={currentQuestion} user={user?.sub} />
                </div>
            </div>
        </>
    )
}
